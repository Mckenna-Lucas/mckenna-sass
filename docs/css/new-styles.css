abbr,address,article,aside,audio,b,blockquote,body,canvas,caption,cite,code,dd,del,details,dfn,div,dl,dt,em,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,p,pre,q,samp,section,small,span,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,ul,var,video{background:transparent;border:0;font-size:100%;margin:0;outline:0;padding:0;vertical-align:baseline}body{line-height:1}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}nav ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}a{background:transparent;font-size:100%;margin:0;padding:0;vertical-align:baseline}ins{text-decoration:none}ins,mark{background-color:#ff9;color:#000}mark{font-style:italic;font-weight:700}del{text-decoration:line-through}abbr[title],dfn[title]{border-bottom:1px dotted;cursor:help}table{border-collapse:collapse;border-spacing:0}hr{border:0;border-top:1px solid #ccc;display:block;height:1px;margin:1em 0;padding:0}input,select{vertical-align:middle}.nav{color:#ffcfcf;min-width:140px;padding-left:15px;padding-right:15px;padding-top:35px;text-align:center;width:15%}a:link,a:visited{color:#ffcfcf;text-decoration:none}a:hover{color:#ffcfcf;text-decoration:underline}.content{background-color:#ffcfcf;min-height:750px;min-width:600px;width:85%}.content>*{padding-left:30px}.content a:link,.content a:visited{color:#fff;text-decoration:underline}p{min-width:550px;width:55%}img,video{height:350px;margin-bottom:30px;width:550px}body,html{color:#fff;font-family:Arial;font-size:62.5%}dl,ol,p,ul{font-size:2rem;line-height:2rem;margin-bottom:12px}h1{font-size:3.75rem;margin:20px 0}h2{font-size:2.5rem;margin:16px 0}h3{font-size:2rem}h3,h4{margin:14px 0 8px}h4{font-size:1.6rem}ul{list-style:circle}.container{display:-webkit-flex;display:-ms-flexbox;display:flex;min-height:100%}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
